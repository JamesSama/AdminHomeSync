@page "/devices"
@using AdminHomeSync.Components.Services

@inject DeviceService DeviceService

<PageTitle>Devices</PageTitle>

<div class="devices">
    <div class="devices-outer-box">
        <h3>Devices</h3>

        <div class="devices-page">

            <!-- Error message displayed above the table -->
            @if (!string.IsNullOrEmpty(ErrorMessage))
            {
                <div class="alert alert-danger">@ErrorMessage</div>
            }

            <div class="devices-summary-row">
                <div class="devices-summary-box">
                    <img src="icon/arduino.svg" alt="arduino" class="icon" />
                    <h4>Total Arduinos</h4>
                    <p>@arduinoDevicesCount</p>
                </div>

                <div class="devices-summary-box">
                    <img src="icon/nav-devices.svg" alt="devices" class="icon" />
                    <h4>Connected Devices</h4>
                    <p>@connectedDevicesCount</p>
                </div>
            </div>

            <div class="device-content-container">
                <div class="device-list-container">
                    <div class="container-header">
                        <p>#</p>
                        <p>Owner</p>
                        <p>Device Type</p>
                        <p>Status</p>
                    </div>
                    <div class="content-container">
                       
                        @if (userDevices == null || !userDevices.Any())
                        {
                            <div class="alert alert-warning full-width-warning">
                                No Device Data Found.
                            </div>
                        }
                        else
                        {
                            @foreach (var item in userDevices.Select((device, i) => new { device, i }))
                            {
                                <div class="list-box">
                                    <p class="contents-id">@((item.i + 1))</p>
                                    <p class="contents-owner">@item.device.Name</p>

                                    <div class="contents-dev">
                                        <p>@item.device.Lights.Name</p>
                                        <p>@item.device.Fan.Name</p>
                                        <p>@item.device.MotionSensor.Name</p>
                                    </div>
                                    <div class="contents-stat">
                                        <p>@(item.device.Lights.IsConnected ? "Connected" : "Disconnected")</p>
                                        <p>@(item.device.Fan.IsConnected ? "Connected" : "Disconnected")</p>
                                        <p>@(item.device.MotionSensor.IsConnected ? "Connected" : "Disconnected")</p>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<UserDevice> userDevices = new List<UserDevice>();
    private int connectedDevicesCount;
    private int arduinoDevicesCount;
    private string ErrorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Fetch devices data from DeviceService
            userDevices = await DeviceService.GetDevicesDataAsync();

            // Calculate summary counts
            connectedDevicesCount = userDevices.Sum(d => (d.Lights.IsConnected ? 1 : 0) + (d.Fan.IsConnected ? 1 : 0) +
            (d.MotionSensor.IsConnected ? 1 : 0));
            arduinoDevicesCount = userDevices.Count(d => d.Lights.Type == "Arduino" || d.Fan.Type == "Arduino" ||
            d.MotionSensor.Type == "Arduino");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading device data: {ex.Message}");
            ErrorMessage = "Something went wrong while loading the devices. Please try again later.";
        }
    }
}
