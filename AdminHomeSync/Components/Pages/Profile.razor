@page "/profile"
@using AdminHomeSync.Components.Services
@inject IJSRuntime JS
@inject NavigationManager Navigation
@inject ProfileService ProfileService

<PageTitle>Profile</PageTitle>

<div class="profile-page">
    <div class="profile-container">
        <p class="top-header">Profile</p>
        <div class="top-box">
            <div class="top-box-left">
                <p class="top-name">@profile.FirstName @profile.LastName</p>
                <p class="top-sub">Name</p>
            </div>
            <div class="top-box-right">
                <button class="logout" @onclick="Logout">
                    <img src="icon/logout.svg" alt="Logout Logo" class="logout-icon" />
                    Logout
                </button>
            </div>
        </div>
        <div class="bottom-part">
            <p class="bottom-header">Personal Information</p>
            <div class="bottom-box">
                <div class="box-item">
                    <div class="logo-container">
                        <img src="icon/web-profile-birthdate.svg" alt="Birthdate Logo" class="birthdate-icon" />
                    </div>
                    <div class="text-content">
                        <p class="top-text">@profile.Birthdate</p>
                        <p class="bot-text">Birthdate</p>
                    </div>
                </div>
                <div class="box-item">
                    <div class="logo-container">
                        <img src="icon/web-profile-sex.svg" alt="Sex Logo" class="sex-icon" />
                    </div>
                    <div class="text-content">
                        <p class="top-text">@profile.Sex</p>
                        <p class="bot-text">Sex</p>
                    </div>
                </div>
                <div class="box-item">
                    <div class="logo-container">
                        <img src="icon/web-profile-email.svg" alt="Email Logo" class="email-icon" />
                    </div>
                    <div class="text-content">
                        <p class="top-text">@profile.Email</p>
                        <p class="bot-text">Email</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private ProfileService.UserProfile profile = new();
    private string userId;

    // This is called when the page initializes
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        // Perform JS interop after rendering
        if (firstRender)
        {
            try
            {
                // Fetch userId from localStorage
                userId = await JS.InvokeAsync<string>("localStorage.getItem", "userId");

                if (string.IsNullOrEmpty(userId))
                {
                    // If no userId found, redirect to login page
                    Navigation.NavigateTo("/login");
                    return;
                }

                // Fetch profile data using ProfileService
                profile = await ProfileService.GetUserProfileAsync(userId);
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error fetching profile: {ex.Message}");
            }
        }
    }

    // Handle logout functionality
    private async Task Logout()
    {
        // Clear session data and navigate to login
        await JS.InvokeVoidAsync("localStorage.removeItem", "firebaseToken");
        await JS.InvokeVoidAsync("localStorage.removeItem", "userId");
        Navigation.NavigateTo("/login");
    }
}
